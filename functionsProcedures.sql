-- Active: 1747486928827@@127.0.0.1@5432@ph@public

/*
@Procedural Approach:
1. Language Support: Supports procedural languages like PL/pgSQL, PL/Perl, PL/Python, etc.
2. Complex Logic: Allows for complex logic using control structures like loops, conditionals, and exception handling.
3. Variable Support: Supports variable declarations and manipulation within the procedural code.
4. Stored Procedures/Functions: Provides the ability to create stored procedures or functions, 

@Non-Procedural Approach:
1. Declarative Queries: Focuses on writing declarative SQL queries to retrieve, insert, update, or delete data from the database.
2. Simplicity: Emphasizes simplicity by expressing operations in terms of what data is needed.
3. SQL Functions: Supports SQL functions, which are single SQL statements that return a value or set of values.
4. Performance: Can sometimes offer better performance for simple operations due to the optimized query execution plans generated by the database engine.
*/


SELECT * FROM employees1;



CREATE Function emp_count()
RETURNS INT
LANGUAGE SQL
as $$
    SELECT COUNT(employee_name) FROM employees1;
$$;


CREATE Function emp_delete()
RETURNS void
LANGUAGE SQL
as $$
    DELETE FROM employees1 WHERE employee_id = 30;
$$;


CREATE Function delete_emp_by_id(p_emp_id INT)
RETURNS void
LANGUAGE SQL
as $$
    DELETE FROM employees1 WHERE employee_id = p_emp_id;
$$;





SELECT emp_count();
SELECT emp_delete();
SELECT delete_emp_by_id(29);





CREATE PROCEDURE remove_emp()
LANGUAGE plpgsql
AS
$$
    BEGIN
        DELETE FROM employees1 WHERE employee_id = 28;
    END
$$;


CREATE PROCEDURE remove_emp_var()
LANGUAGE plpgsql
AS
$$
    DECLARE
    test_var INT;
    BEGIN
        SELECT employee_id INTO test_var from employees1 WHERE employee_id = 27;
        DELETE FROM employees1 WHERE employee_id = test_var;
    END
$$;


CREATE PROCEDURE remove_emp_var_parameter(p_emp_id INT)
LANGUAGE plpgsql
AS
$$
    DECLARE
    test_var INT;
    BEGIN
        SELECT employee_id INTO test_var from employees1 WHERE employee_id = p_emp_id;
        DELETE FROM employees1 WHERE employee_id = test_var;

        -- RAISE NOTICE 'Employee Remove Successfully!';
    END
$$;

DROP PROCEDURE remove_emp_var_parameter(INT);

CALL remove_emp();
CALL remove_emp_var();
CALL remove_emp_var_parameter(24);